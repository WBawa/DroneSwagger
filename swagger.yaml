swagger: '2.0'
info:
  description: This is apis for Drone Sprint 4
  version: 1.0.0
  title: Drone apis
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /drone/{id}/actions:
    put:
      tags:
      - drone
      summary: send drone actions
      description: send actions commands to drone
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID
      - in: body
        name: action
        schema:
          type: string
        required: true
        description: action to excecute
      responses:
        200:
          description: drone action excecuted
          examples:
            application/json: {"error":false,"data":{},"message":"success"}
        400:
          description: drone action is not excecuted
          examples:
            application/json: {"error":true,"data":{},"message":"drone action is not excecuted"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
  /drone/{id}/photo:
    post:
      tags:
      - drone
      summary: take photo
      description: drone take a photo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID
      responses:
        200:
          description: Drone has taken a photo
          examples:
            application/json: {"error":false,"data":{},"message":"success"}
        400:
          description: drone streaming is not available
          examples:
            application/json: {"error":true,"data":{},"message":"drone failed to take a photo"}
        404:
          description: Drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
  
  /drone/{id}/thermal:
    delete:
      tags:
      - drone
      summary: disable drone camera thermal mode
      description: disable drone camera thermal mode
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID
      responses:
        200:
          description: drone camera thermal mode disable is done
          examples:
            application/json: {"error":false,"data":{},"message":"success"}
        400:
          description: drone camera thermal mode disable is not available
          examples:
            application/json: {"error":true,"data":{},"message":"disable drone camera thermal mode is not excecuted"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
    put:
      tags:
      - drone
      summary: enable drone camera thermal mode
      description: enable drone camera thermal mode
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: false
        description: drone ID
      - in: body
        name: enable
        schema:
          type: string
        required: true
        description: "enable true for activate thermal mode"
      responses:
        200:
          description: drone camera thermal mode changed is done
          examples:
            application/json: {"error":false,"data":{},"message":"success"}
        400:
          description: drone camera thermal mode is not available
          examples:
            application/json: {"error":true,"data":{},"message":"enable drone camera thermal mode is not excecuted"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
  /drone:
    get:
      tags:
      - drone
      summary: get drone list
      description: get drone list
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: drone list data
          examples:
            application/json: {"error":false,"data":[{"id":"DRONE1","ip": "10.0.0.1","enable": true}],"message":"success"}
          
            
  /drone/{id}:
    get:
      tags:
      - drone
      summary: get drone data state
      description: get drone data state inspection point, battery level, drone state
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID
      responses:
        200:
          description: drone data is available
          examples:
            application/json: {"error":false,"data":{"id": "DRONE1","ip": "10.0.0.1","enable": true,"lastDroneState": {"id": 1,"battery": 90,"state":"flying","speedx":0.0304199624806643,"speedy":2.05691766738892,"speedz":-0.516887664794922,"lat":48.8789247502303,"lon":2.36777917578966,"alt":1.70987713336945,"created_at": "2021-06-17 10:41:07.022946","flight":{"id": 1, "is_waypoint_inspections_point": false}}},"message":"success"}
          
        400:
          description: drone data is not available
          examples:
            application/json: {"error":true,"data":{},"message":"error get drone data"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
            
  /drone/{id}/gimbal:
    put:
      tags:
      - drone
      summary: Change drone gimbal position
      description: Move gimbal by specifying (x,y) coordinates
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID
      - in: body
        name: coord
        description: Moves the camera to given coordinates
        schema:
          type: object
          required:
            - x
            - y
          properties:
            x:
              type: number
            y:
              type: number
      responses:
        200:
          description: drone gimbal change position is done
          examples:
            application/json: {"error":false,"data":{},"message":"success"}
        400:
          description: drone gimbal not available
          examples:
            application/json: {"error":true,"data":{},"message":"gimbal position change not excecuted"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
            
  /drone/{id}/zoom:
    delete:
      tags:
      - drone
      summary: make drone zoom  out
      description: send values to drone camera for make zoom out
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID

      responses:
        200:
          description: drone zoom is done
          examples:
            application/json: {"error":false,"data":{},"message":"success"}
        400:
          description: drone zoom is not available
          examples:
            application/json: {"error":true,"data":{},"message":"zoom not excecuted"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
    put:
      tags:
      - drone
      summary: make drone zoom in
      description: send values to drone camera for make zoom in
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID

      responses:
        200:
          description: drone zoom is done
          examples:
            application/json: {"error":false,"data":{},"message":"success"}
        400:
          description: drone zoom is not available
          examples:
            application/json: {"error":true,"data":{},"message":"zoom not excecuted"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
            
  /drone/{id}/streaming:
    post:
      tags:
      - drone
      summary: check streaming availability
      description: check if drone streaming is available
      consumes:
      - application/text
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID
      responses:
        200:
          description: drone streaming is available
          examples:
            application/json: {"error":false,"data":{},"message":"streaming is available"}
        400:
          description: drone streaming is not available
          examples:
            application/json: {"error":true,"data":{},"message":"streaming is not available"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
    get:
      tags:
      - drone
      summary: get streaming data
      description: check if drone streaming is available
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: drone ID
      responses:
        200:
          description: image data binary
          
        400:
          description: drone image data is not available
          examples:
            application/json: {"error":true,"data":{},"message":"error on get streaming"}
        404:
          description: drone not found
          examples:
            application/json: {"error":true,"data":{},"message":"drone not found"}
  
          
# Added by API Auto Mocking Plugin
host: server.url.com
# basePath: /theegg/Drone/1.0.0
schemes:
 - https
# Added by API Auto Mocking Plugin
basePath: /
